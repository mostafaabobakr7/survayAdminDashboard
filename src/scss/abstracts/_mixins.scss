@mixin clearFix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin bgwhite($opacity: 0.8) {
  background-color: rgba(white, $opacity);
}

@mixin bgblack($opacity: 0.8) {
  background-color: rgba(black, $opacity);
}

@mixin center($x:-50%, $y:-50%) {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate($x, $y);
}

@mixin overlayDark ($opacity: 0.8) {
  position: relative;
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(black, $opacity);
  }
}

@mixin overlayWhite ($opacity: 0.8) {
  position: relative;
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(white, $opacity);
  }
}

@mixin dropDownShadow($opacity: 0.5) {
  box-shadow: 0 0.4rem 2.4rem -0.4rem rgba(black, $opacity);
  border: 1px solid #c6c6c6;
  border-color: rgba(0, 0, 0, .05);
  border-radius: 4px;
}

/* MEDIA QUERY MANAGER
0 - 600px:  Phone
600 - 900px: Tablet portrait
900 - 1200px Tablet landscape
1200 - 1800 is where our normal style apply
1800px + : Big Desktop

$brakpoint argument choices:
em is best for @media instead of px
- phone max-width: 600px /16 = 37.5em
- tab-port max-width: 900px / 16 = 56.25em
- tab-land max-width: 1200px / 16 = 75em
- big-desktop min-width: 1800px / 16 = 112.5em
ORDER:
> Base + typography
> general layout + grid
> page layout
> components
 */

@mixin respond($breakpoint) {
  @if $breakpoint==big-desktop {
    @media (min-width: 112.5em) {
      @content
    }
    ; // 1800px < ðŸ“º
  }
  @if $breakpoint==tab-land {
    @media (max-width: 75em) {
      @content
    }
    ; //900px < ðŸ’» < 1200px
  }
  @if $breakpoint==tab-port {
    @media (max-width: 56.25em) {
      @content
    }
    ; //600px < ðŸ–¥ < 900px
  }
  @if $breakpoint==phone {
    @media (max-width: 37.5em) {
      @content
    }
    ; // ðŸ“± < 600px
  }
}