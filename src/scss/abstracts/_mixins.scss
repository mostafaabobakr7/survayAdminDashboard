@mixin clearFix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin bgwhite($opacity: 0.8) {
  background-color: rgba(white, $opacity);
}

@mixin bgblack($opacity: 0.8) {
  background-color: rgba(black, $opacity);
}

@mixin center($x:-50%, $y:-50%) {
  position: absolute;
  top: -(-$y);
  left: -(-$x);
  transform: translate($x, $y);
}

@mixin overlayDark ($opacity: 0.8) {
  position: relative;
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(black, $opacity);
  }
}

@mixin overlayWhite ($opacity: 0.8) {
  position: relative;
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(white, $opacity);
  }
}

@mixin dropDownShadow($opacity: 0.5) {
  box-shadow: 0 0.4rem 2.4rem -0.4rem rgba(black, $opacity);
  border: 1px solid #c6c6c6;
  border-color: rgba(0, 0, 0, .05);
  border-radius: 4px;
}

/* Just include this SCSS mixin in any rule and specify the high resolution imageâ€™s path and device independent pixel dimensions
div.logo {
  background: url("logo.png") no-repeat;
  @include image-2x("logo2x.png",100px,25px);
}
The image-2x mixin detects high resolution displays like this
*/

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
    background-image: url($image);
    background-size: $width $height;
  }
}

@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) {
  @font-face {
    font-family: quote($font-name);
    src: url($file-name + '.eot');
    src: url($file-name + '.eot?#iefix') format('embedded-opentype'),
    url($file-name + '.woff') format('woff'),
    url($file-name + '.ttf') format('truetype'),
    url($file-name + '.svg##{$font-name}') format('svg');
    font-weight: $weight;
    font-style: $style;
  }
}

/* triangle you see coming out of most traditional tooltips */

@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false) {
  @include pseudo($pos: $position);
  width: 0;
  height: 0;
  @if $round {
    border-radius: 3px;
  }
  @if $direction==down {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
    margin-top: 0 - round( $size / 2.5);
  }
  @else if $direction==up {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
    margin-bottom: 0 - round( $size / 2.5);
  }
  @else if $direction==right {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
    margin-right: -$size;
  }
  @else if $direction==left {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
    margin-left: -$size;
  }
}

/* MEDIA QUERY MANAGER
0 - 600px:  Phone
600 - 900px: Tablet portrait
900 - 1200px Tablet landscape
1200 - 1800 is where our normal style apply
1800px + : Big Desktop

$brakpoint argument choices:
em is best for @media instead of px
- phone max-width: 600px /16 = 37.5em
- tab-port max-width: 900px / 16 = 56.25em
- tab-land max-width: 1200px / 16 = 75em
- big-desktop min-width: 1800px / 16 = 112.5em
ORDER:
> Base + typography
> general layout + grid
> page layout
> components
 */

@mixin respond($breakpoint) {
  @if $breakpoint==big-desktop {
    @media (min-width: 112.5em) {
      @content
    }
    ; // 1800px < ðŸ“º
  }
  @if $breakpoint==tab-land {
    @media (max-width: 75em) {
      @content
    }
    ; //900px < ðŸ’» < 1200px
  }
  @if $breakpoint==tab-port {
    @media (max-width: 56.25em) {
      @content
    }
    ; //600px < ðŸ–¥ < 900px
  }
  @if $breakpoint==phone {
    @media (max-width: 37.5em) {
      @content
    }
    ; // ðŸ“± < 600px
  }
}